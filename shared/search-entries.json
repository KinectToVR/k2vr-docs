{"entries":[{"title":"Setting up your Xbox 360 Kinect","path":"en/360/setup","plaintext":"setting up your xbox 360 kinect placing the kinect before going any further you should make sure your kinect is in a good spot to track you tracking quality is heavily dependent on the placement of the kinect the distance and angle of the sensor in relation to where you're going to stand when playing plays a major role in the confidence of the skeleton tracking sdk more on this subject here kinect placement the kinect should be at the edge of where you're going to play in vr so that you can be facing it a minimum distance of 1 5 meters 5 feet is required for tracking to function but you should be able to stand about 2 meters 6 5 feet away for the best experience height wise put the kinect at around eye level it depends on how tall you are and how big your room is but generally it should be high up pointing down never pointing up it wasn't made to track like that connecting it to your computer using the adapter connect the sensor to a power outlet and to your computer avoid usb hubs or extensions as they can degrade the signal quality and data transfer speed of the kinect causing various errors installing the drivers when using amethyst installer the kinect for windows sdk will be automatically installed and the installer will attempt to fix any possible software problems with the driver kinect for xbox 360 and kinect for windows v1 requires the kinect for windows sdk v1 8 to function 1 8 is the last version for 360 2 0 is for xbox one |package |description | | | | |kinect for windows runtime v1 8|includes skeleton tracking and libraries but only supports kinect for windows | |kinect for windows sdk v1 8 download this one |includes everything the runtime does adds support for xbox kinect and headers for development | |kinect for windows developer toolkit v1 8 0|this one is optional a bunch of developer samples including kinect explorer which lets you see the kinect's camera feed to better place it it requires the sdk to be installed first | if you have installed the kinect for windows sdk v2 0 you may run into issues trying to install v1 8 if the installation fails try to remove that if it's present on your system"},{"title":"Xbox 360 Kinect troubleshooting","path":"en/360/troubleshooting","plaintext":"xbox 360 kinect troubleshooting your mom there can be many reasons why your xbox 360 kinect would stop working either a software or hardware problem usually the kinect for windows sdk will have useful errors to guide you refer to these pages to help you this error happens either because of a driver install bug or because of a broken or faulty adapter this is a more generalized error it has many causes more often than not reinstalling drivers will fix it no your kinect isn't a fake this happens because of a drop in the usb data transfer speed either because of a flaky cable or because of a bad or overloaded usb controller chipset this error is caused by multiple scenarios and as such the name may be misleading"},{"title":"How to fix E_NUI_INSUFFICIENTBANDWIDTH","path":"en/360/troubleshooting/insufficientbandwidth","plaintext":"how to fix e nui insufficientbandwidth this error happens in two situations either the kinect for windows sdk can't initialise the kinect properly or you are lacking usb bandwidth checking if you are really lacking bandwidth usb can only support up to a certain amount of bandwidth before it can't handle all connected devices properly the instructions on the e not genuine page should be helpful checking if the kinect for windows sdk can't initialise properly kinect management service first check to see if the kinect management service is running press x to open the windows poweruser menu click on computer management double click on services and applications then on services in the list look for the kinect management service ensure that it is running in the status column services page showing the kinect management service selected if it isn't click start the service on the left of the list after clicking on the kinect management service after doing this go back to amethyst head over to the devices tab then on xbox 360 kinect click refresh on the right camera driver the driver required to access the kinect's camera hasn't been updated in nearly a decade this driver is automatically disabled on new systems running modern windows 10 or 11 as a security feature to allow windows to load the driver you must disable memory integrity which can be done as follows go to core isolation on windows security open windows security go to device security under core isolation click on core isolation details make sure that memory integrity is turned off memory integrity updating the driver requires us to reimplement it which is doable however modern windows requires that drivers are signed using a certificate that would cost us around 300 every year at minimum we don't receive enough donations to be able to comfortably afford this additionally the process of obtaining a signing certificate which is required to be able to sign drivers demands that we disclose our own personal information which we also do not want to do if you want to help make this feasible consider donating"},{"title":"How to fix E_NUI_NOTGENUINE","path":"en/360/troubleshooting/notgenuine","plaintext":"how to fix e nui notgenuine the genuine naming comes from the kinect for windows sdk it doesn't actually mean that your kinect is a fake those don't even exist this error happens when you get a sudden drop in usb data transfer speed causing a latency spike it makes the internal timings go out of whack until the kinect is reset this drop in speed can either happen because of usb extensions cheap usb hubs or a bad overloaded usb controller about usb controllers i swear this is important usb controllers are the physical chipsets or parts of a chip often in the cpu itself that manage usb ports and handle their incoming and outgoing data the usb standard is actually very complex and not every hardware manufacturer implements it fully specifically you should try and avoid these asmedia 3 0 3 1 is okay amd controllers before amd ryzen fresco logic via bugs or mistakes in their implementation can cause the most random issues often ending up in a notgenuine error going about fixing it first make sure to avoid using usb extensions of hubs they can cause their own multitude of issues with signal degradation going in blind try plugging the kinect into a different usb port and hope for the best after changing ports you'll want to head to the devices tab in amethyst and click refresh to ensure the device status is successful using usbtreeview there is a third party tool created by uwe sieber named usbtreeview it shows your usb host controllers and each of the ports connected to them it often shows more ports than are actually present on the computer that's normal and every device plugged into those ports you can download it here usbtreeview exe screenshot of usbtreeview usb host controllers are represented using the card icon try connecting the kinect so it appears on a different host controller then click refresh in the amethyst devices tab some devices like microphones or exotic gaming peripherals can do weird things to usb controllers and devices like certain vr headsets e g any oculus meta headset windows mixed reality headsets hard drives and webcams demand a lot of bandwidth from a usb controller you should try unplugging these if nothing else seems to work"},{"title":"How to fix E_NUI_NOTPOWERED","path":"en/360/troubleshooting/notpowered","plaintext":"how to fix e nui notpowered this error usually has two possible causes a bug occured during the kinect for windows driver installation leaving one or more devices as unknowns until manually refreshed the adapter is not sending 12 volts power to the kinect either because it's not plugged into a working power outlet or because it's faulty fixing the device installation bug fix e nui notpowered if you used amethyst installer it already attempted to fix this open device manager you can do so by right clicking on the start menu button right clicking on start in device manager locate the other devices category and extend it in there you should see up to 3 of the following devices audios kinect for windows security xbox nui camera for each of them right click then uninstall device then ok the other devices category may contain devices unrelated to kinect only uninstall devices matching the list above finally right click on any device then scan for hardware changes nothing appears in other devices first check that your adapter is getting power there should be a light either where the kinect plugs in or on the part that plugs into the wall 360 adapter light placement if you don't see any light try connecting it to a different outlet but you probably have a faulty broken adapter what now if you just purchased the adapter try returning it or asking for a refund if possible then get another adapter from a recommended source"},{"title":"How to fix E_NUI_NOTREADY","path":"en/360/troubleshooting/notready","plaintext":"how to fix e nui notready the notready error is infamous for either being super easy to fix or an absolute nightmare more often than not disabling windows' memory integrity feature then reinstalling the kinect sdk is enough but sometimes we just never manage to fix it reinstalling the kinect sdk let's go through this circus shall we uninstalling go to windows settings then apps and features open apps and features in the right hand search box type kinect without quotes windows 10 settings page demonstrating how to uninstall kinect drivers click each item then click uninstall follow the instructions go to windows settings then apps then installed apps open apps and features in the right hand search box type kinect without quotes windows 11 settings page demonstrating how to uninstall kinect drivers click on the three dots on the right edge of each item then click uninstall follow the instructions disabling memory integrity go to core isolation on windows security open windows security go to device security under core isolation click on core isolation details make sure that memory integrity is turned off memory integrity reinstalling once the sdk is completely removed re install it using amethyst installer as it does a lot of things under the hood to make sure the drivers installed properly not on your own we don't trust you we don't trust microsoft"},{"title":"About Amethyst and K2VR","path":"en/about","plaintext":"about amethyst and k2vr the story the k2vr team and project originally started out as kinecttovr it was an opensource application created by sharkyh20 for kinect and psmove full body tracking it was made as a sort of response to the alternatives being paid because of real life obligations sharky stepped away from the project leaving it unattended for a long time for some reason i aurora picked up the project and chose to start giving users support for it eventually writing a crude installer meeting up with akaya who at the time had forked the kinecttovr codebase and was intending on using it for an arduino vr glove project akaya's efforts in fixing up kinecttovr for their usecase led to a new version of the app since we didn't have a definitive answer on whether sharky would pick the project back up at the time we named this version of the app kinecttovr ex or k2ex for short the ex was meant to stand for extra or extended because it added features to the original work of sharky years have passed and an official website custom graphical installer multiple large scale yearly updates and thousands of users later we've arrived at present day what is amethyst amethyst is a modular platform with support for device plugins that you can write yourself if you know c by default it comes with device plugins for xbox 360 kinect xbox one kinect psmoveservice ex and owotrack it's pretty much a complete departure from the original kinecttovr app for almost as long as k2ex has been a thing akaya has worked on a now defunct rewrite of the app using qt as a side project with the intent of having it replace the main app eventually a lot of the work from this rewrite wasn't in vain though from it was created k2api which provides the necessary interfaces for any application to communicate with the steamvr driver and a lot of boilerplate code for handling kinect after multiple roadblocks were brought up by qt akaya canned it and started working on a super secret ktvr rewrite using microsoft's winui 3 for the interface originally titled kinecttovr 1 0 it was given the codename amethyst i came up with that name in about 30 seconds it was only meant to be a codename for us to refer to the app internally without getting confused it eventually dawned on me that considering the small jump in version numbers only from 0 9 to 1 0 users might not catch on to the fact that this is an entirely new app and so the name amethyst was given to the whole winui 3 project and it was given a shiny new coat of paint on the dots logo it also turns out that people don't tend to misspell amethyst as much as they do kinecttovr where are we now now the app is called amethyst it's created by k2vr team and support for it is given on the k2vr community discord server the application and it's documentation are hosted on the k2vr tech website the application used to install amethyst is called amethyst installer so tl dr when you talk about the app amethyst when you talk about the project k2vr who is that girl that's violet she acts as the face of k2vr because amethyst is a body tracking application it made sense for us to have a consistent character to help us create tracking demos in a way that's consistent with the rest of branding you can find her doing some sick tricks on the website's homepage greeting you in the amethyst installer and in the calibration window to show you a direct visual guide on how to move about your room why maintain kinect full body isn't it a dead end technology i can see why one would think that but the reality is that over the years with different ideas innovations and such we've been able to push so much out of this aging hardware and it gets a ton of existing silicon a new lease on life and makes people happy i won't hide that it often hurts having to deal with the outdated drivers for kinect they're very buggy and the source of most of our users' problems but when people come in the server and tell us just how much fun they had with their kinect it makes it all worth it having body tracking in vr is one of the most immersion fullfilling experiences and we get to provide it free or almost free of charge to anyone kinect is already way better than a 30 dollar sensor from 2010 has any right to be and we're not done because nothing is confirmed yet i won't reveal potential future plans but expect some really cool stuff from the team do you take donations yes right here on our opencollective page you can either make a monthly or one time donation money will go to domain and hosting costs buying missing hardware for team members to test faster and compensating everyone's volunteer work they've done for years donators will be given a permanent role on the discord and have their name listed in the app's credits page you can choose not to if you wish to keep anonymity"},{"title":"About the transition to Amethyst","path":"en/amethyst-transition","plaintext":"about the transition to amethyst an introduction it's been two years since we last updated k2ex since then we've been working on a new app named amethyst because it's so old and amethyst fixes basically every issue with it we want to get everyone transitioned over k2ex was built on the original codebase of kinecttovr while we spent a long time fixing bugs and improving it at their core kinecttovr and k2ex were built on a hardcoded shell with a lot of dependencies on libraries we didn't wish to continue using like sfml and boost amethyst is built with all the latest technologies a fancy new user interface and everything we've learned from the past it's made to be stable reliable and modular both in code and for the user you can extend its device support and functionality with your own plugins what to expect comparison of k2ex and amethyst if you've used k2ex in the past amethyst should be a piece of cake for you we took in the feedback of every k2ex user and took it into consideration when designing the user experience if you're a new user we hope it can be just as simple with all the new onboarding and in app instructions functionality wise amethyst works similarly to k2ex it does try to automate as many things as possible and it tries hold your hand when possible the biggest changes are in stability and features amethyst adds support for things like owotrack external tracker based flip new orientation modes for xbox one kinect users finally 🥳 and the ability to spawn a lot more trackers than the 3 supported in k2ex join the discord please amethyst may be near ready for release but we would still prefer if you either join the discord beforehand or see it as the first resource to go to the second you run into a problem we've already done a pretty strong job of pointing to the discord in the installer and the app itself for help and bug reports our discord is here at k2vr community discord download download the latest version of amethyst installer now"},{"title":"How to calibrate","path":"en/app/calibration","plaintext":"how to calibrate calibrating the amethyst trackers to your vr playspace is separate from in game full body tracking calibration in games like vrchat or neosvr for vrchat either refer to the official documentation or simply line up the spheres and press both triggers calibrating amethyst after connecting the trackers to steamvr and making sure your device's tracking is in order click on the begin calibration button located in the general page of the app this will open a panel for you to choose your calibration mode amethyst comes with two calibration modes automatic and manual depending on the device it is possible that only manual calibration will be available for example if calibrating psmoveserviceex calibration serves to line up the amethyst tracking space with that of your vr headset it's unrelated to improving the tracking quality from your device check this page for more information on improving your tracking quality automatic calibration this mode involves calculating the offset between the amethyst and the steamvr playspaces based on the alignment of the skeleton tracking's head bone and your vr headset then the calibration points are averaged together to improve the precision of the result there is a setting to change the number of calibration points note that this is not related to the number of trackers instead it defines how many positions are going to be captured to average your alignment from using automatic calibration put on your vr headset make sure the sensor can track you properly and your head is tracked click on begin calibration two countdowns will happen for each position first you will be given time to move to a new spot and then get into position then the second countdown gives you time to stay still for the capture you must face the sensor during all position captures finally that position is captured once all positions are done calibration is complete if automatic calibration fails try again tracking glitches can cause the captured position to be off from where it should be increasing the number of points is helpful to avoid those problems manual calibration this mode involves lining up the tracking space of amethyst manually using vr controls those controls are shown in the app though they won't match if you change them via the steamvr bindings menu whenever available automatic calibration will yield better results in a proper setup manual calibration is prone to human error and should only be used when necessary using manual calibration when using vive wand controllers and index knuckle controllers the grip and trigger controls' roles are swapped to make fine tuning and confirming easier put on your vr headset and grab your controllers without any game running click on manual in the calibration mode screen take note of the controls then close the steamvr dashboard by clicking outside of it you should see nothing but the empty void with the circles on the ground i recommend first placing the trackers slightly to your right to adjust that rotation don't forget holding the left grip button will slow down your move rotate controls so you can make fine adjustments after lining up the trackers to your body take a step forward and check if they still line up if they don't adjust the left joystick rotation until they do again and they should still be good when walking back once you're happy with the calibration hold both triggers to confirm and save"},{"title":"Getting started with Amethyst","path":"en/app/getting-started","plaintext":"getting started with amethyst requirements and installation amethyst works with local pcs only amethyst only works on windows 10 20h2 or newer you need a roomscale vr headset with tracked motion controllers you must have roomscale tracking for your head and hands you should be able to move freely around your room amethyst is only for lower body tracking amethyst can only track your legs waist and elbows it supports all vr headsets that work with steamvr and the meta quest series of headsets you need a large enough room for kinect when using kinect you should stand at least 6 feet 2 meters away from the sensor and have it at head height pointing down at you you should be standing 9 feet 3 meters away for the best tracking shadow and plutosphere cloud pcs in general do not work any attempt to jank osc into working remotely is entirely your own responsibility please don't do it we're also not giving support for that really old shadow client server thingie that one person made it's literally so old might as well be a dinosaur if we see you asking about shadow we will point to this exact spot set up amethyst for pc how to install amethyst for pc amethyst also works with vrchat standalone on quest via osc this is for standalone quest vrchat click the button above for pc how to setup amethyst with osc for quest standalone before anything else you must have a supported device to use with amethyst by default the following is supported xbox 360 kinect recommended xbox one kinect playstation move only for rotation overrides playstation move eye setup is very involved owotrack also mostly for overrides if you don't have a device already instructions about buying a kinect and adapter tldr do not buy adapters on amazon and do not buy the xbox one kinect for xbox 360 kinect users xbox 360 kinect setup for xbox one kinect users xbox one kinect setup help and support you can reach us here on discord k2vr community discord"},{"title":"Improve tracking","path":"en/app/improve-tracking","plaintext":"improve tracking the difference between a well configured kinect setup and one that was plonked down without much thought is pretty big there are a number of things you should take into consideration if you wish to get the most out of kinect room size and cleanliness kinect placement clothing material avoiding sunlight and other infrared interference not using lens adapters playing into the kinect's strengths using overrides to augment tracking room size and cleanliness as shown in the page about getting a kinect and adapter there is a non negligible minimum distance required for tracking to work at all and for tracking to work best xbox 360 kinect recommended 9ft 3m minimum 6ft 2m xbox one kinect recommended 7ft 2 6m minimum 5ft 1 7m as a general rule of thumb your entire body should be visible in the amethyst tracking preview as well clearing out your space of any furniture or objects that could obscure the depth of the kinect will help with tracking kinect placement as an extension of room size placing your kinect properly in relation to both the room and how tall you are is just as important if the kinect is too low the tracking quality will go down too high and it will also lower quality you should aim for around shoulder to eye level with an angle and distance that allows the kinect to see you from head to toe and see the floor avoid very steep angles anything past 21 degree is going to reduce the tracking quality by a lot clothing material the color of your clothes doesn't matter but the type of fabric and the shape does wearing baggy clothes like loose sweatpants dresses or skirts will obscure the actual shape of your body making it harder for the kinect to track as well consider the way that the kinect tracks the fabric your clothes are made of should not only be reflective to infrared but also reflect it clearly think of clear versus frosted glass both of them reflect light but the frosted glass refracts the light bouncing onto it into a blurry mess the kinect needs to send a precise pattern of dotted light that it then scans with an infrared camera if that pattern isn't properly reflected then that depth is either completely discarded or has to be guessed avoid sunlight while kinect is imperviable to most types of lighting be it incandescent neon or led lights the sun emits a lot of infrared light which when mixed with the kinect's need to see it's own infrared structured light causes issues try putting closing blinds or moving the kinect so it does not face directly into a window do not use lens adapters such as nyko zoom while it is understandable that one would wish to increase the tracking volume of the xbox 360 kinect with an aftermarket lens accessory these gizmos gadgets doohickeys use fisheye lenses which cause the structured light and the view of the camera to become heavily distorted while it may have worked for games such as just dance which did not use skeleton tracking instead merely matching the body shape in the depth map to what it expected the player to do it won't work for games that require skeleton tracking either the skeleton tracking system will never pick you up or your movements will be very distorted in 3d space also microsoft themselves warned against using it ignore the comments from the morons that had no idea how kinect works play into the kinect's strengths the tracking sdk was made specifically to run very fast on very little power 10 of an xbox 360 as such many concessions were made for example during the development of the skeleton tracking system only poses that were deemed useful for gaming were kept in the training dataset the tracking sdk assumes the player's head to be up and that the player is facing forward it's not that the sdk cannot understand the difference between front and back it's that it was artificially limited to increase stability in a computationally cheap manner understanding this you can temper your expectations on tracking in situations where the sdk wasn't trained and you can try to avoid these so people don't point at you and laugh haha you kinect loser buy vive pucks just print money idiot using overrides to augment tracking considering the often lackluster joint rotation on the kinect sdk you can use ps move controllers or phones with owotrack to replace the rotation of one or more joints from the skeleton with more accurate data see this page for more information about setting up overrides"},{"title":"Installation","path":"en/app/installation","plaintext":"installation here's the download for the latest version of amethyst installer download latest amethyst installer version if you get a windows smartscreen pop up simply click on more info then run anyway smartscreen warning window this appears because the application does not have a certificate we've yet to get one for financial and privacy reasons also getting a certificate wouldn't garantee the immediate disappearance of this pop up thanks microsoft how to fix steamvr or vrpathreg not found error this error happens usually because of a broken openvrpaths vrpath file or because you have a windows user account without administrator permissions make sure that steamvr is closed press r to open the run dialog paste or type in localappdata openvr and press in the file explorer window delete the only file present start and close steamvr once to generate a new file open the installer again log out of your current user account log in to the account that has administrator privileges run amethyst installer there installing as normal the installation is not user dependent log back into your user account and amethyst should be installed and available from the start menu the installer checks for updates on start but you can ignore them so if you have an older installer version excluding k2ex installer you can run that instead of redownloading it installing manually don't do this alternatively you can download amethyst from the releases on github and extract the zip to any folder you wish we recommend using the installer because it will automatically setup drivers for your kinect sensor if you have it plugged in once you have amethyst up and running you will need to register its steamvr driver either by running amethyst recovery in the k2crashhandler folder or going to the bottom of options and clicking re register steamvr driver"},{"title":"How to use overrides","path":"en/app/overrides","plaintext":"how to use overrides overrides in amethyst allow you to take the rotation and or position of one device and replace it with that of another it is only limited to two devices though you could for example use an xbox 360 kinect for your general tracking and use psmoveservice as an override using rotation from ps move controllers for your feet while still using the kinect's skeleton tracking for the position note for example when using ps moves for foot rotation like this the center of rotation of the controller is not going to match where the joint from the kinect is so you'll most likely want to use offsets in the general page to adjust the position until it matches more closely or else you'll have weird displacement when turning when an override runs into an error the base device will still be affected which means that in our ps move feet example your feet would lose all rotation until the device is deselected also you can only select a device as override if it's status is successful"},{"title":"App overview","path":"en/app/overview","plaintext":"app overview this page will go over the various features and options in each tab of amethyst general amethyst general tab |control |description | | | | |connect disconnect trackers|spawn or despawn emulated trackers in steamvr | |begin calibration |open the calibration flyout to pick a calibration mode | |adjust offsets |open the offsets flyout to change individual tracker positions and rotation values only use for minor adjustments post calibration | |hide skeleton |hide the skeleton tracking preview | |force preview |enable to keep the skeleton preview always on | |freeze |freeze the trackers in vr without despawning them this allows you to keep otherwise hard to maintain poses clicking the dropdown next to it allows you to freeze only the lower body trackers keeping your elbows tracked | |current device |your current base device for tracking | |override device |if applicable the device currently set as an override on top of the base | |status |shows the status of the device or driver and alerts you of any problems if multiple items are having problems only one will be shown until it is fixed in the following order driver > base device > override device | |view online docs |opens this documentation to the relevant page when possible | |get help on discord |opens a link to the discord server where you can ask for help | |steamvr driver |status of the steamvr driver for amethyst | |amethyst version |current version of the software | settings amethyst settings tab |control |description | | | | |mirror trackers when turning away from the kinect |due to limitations of the kinect sdk the skeleton tracking can't make the difference between your front and back so you can mirror the tracking based on the direction your head is facing disable this option if you're having issues with looking back over your shoulder | |use external waist tracking data instead of the headset|use external waist tracking data e g vive tracker owotrack for skeleton flip this is more reliable and responsive than using the headset if the option is available to you clicking the arrow next to it will allow you to calibrate the forward orientation | |tracker configuration |each dropdown has a toggle that allows you to enable or disable sets of trackers you need to restart steamvr when making changes for them to propagate properly | |position tracking filter |allows you to change the filtering used for the position data of the joints associated with that set of trackers it doesn't affect rotation only xyz translation movement | |rotation tracking |allows you to choose which type of joint rotation you want to use for each tracker set some may have different settings than others e g feet have software calculated rotation | |restart steamvr |click this once you make any changes for them to be properly applied | |automatically connect enabled trackers at launch |amethyst will auto connect trackers when it is opened either by you or automatically by steamvr if you configured it that way | |enable app sounds |enable or disable ui sounds that play during calibration and other various events | |volume slider |adjust the volume of ui sounds | |delete configuration and restart |deletes the configuration and calibration files in appdata amethyst and restarts the app | |re register steamvr driver entry |add or re add the amethyst steamvr driver path to the localappdata openvr openvrpaths vrpath file | |reinstall steamvr manifests |add or re add the steamvr overlays startup entry for amethyst to allow you to have it startup automatically with steamvr clicking the arrow next to it will give you the option to enable it from within amethyst | devices and overrides amethyst devices tab |control|description| | | | |devices |lists all of the currently loaded amethyst plugins | |currently tracking|shows the current selected device plugins for the base and override | |status |shows the status of the device or plugin and shows detailed error messages when errors happen | |reconnect |allows you to reload refresh the device or plugin state clicking the dropdown will allow you to disconnect the plugin completely if it is connected | |view docs |opens this documentation to the relevant page when possible | |join discord |opens a link to the discord server where you can ask for help | |set device as |allows you to pick a device as base or override | |overrides |lists all the supported trackers from the base device and allows you to configure which joints are affected | if you wish to learn more about overrides go over here"},{"title":"SteamVR driver troubleshooting","path":"en/app/steamvr-driver-codes","plaintext":"steamvr driver troubleshooting well shucks your amethyst steamvr driver isn't working how do you go about fixing that how to fix exception while checking code 10 this means the steamvr driver is not loaded at all either because it's disabled and or because it's not listed to steamvr in any way enable the amethyst steamvr add on if the driver is missing from that list click the re register steamvr driver entry button re register steamvr driver button after restarting steamvr the driver should now be working if amethyst fails to register the steamvr driver reach us on discord for help how to fix server connection error code 1 this usually happens because you have a version of the steamvr driver running but it's outdated to attempt to fix it only use this if you installed amethyst in the default location c amethyst and steamvr in the default steam library c program files x86 steam steamapps common steamvr you can download this file and put it in the localappdata openvr folder while steamvr is closed note that this method will erase entries for other steamvr drivers we recommend editing it by hand if you're comfortable editing json go to the settings tab of amethyst scroll all the way down click on re register steamvr driver entry close both amethyst and steamvr open the run dialog with r paste in localappdata openvr openvrpaths vrpath when windows asks you what to open the file with either pick notepad or whichever editor you prefer here's an example vrpaths file we're going to remove the old amethyst line because steamvr will ignore the new one otherwise config [ c program files x86 steam config ] external drivers [ c program files alvr d vr software amethyst old c amethyst amethyst ] jsonid vrpathreg log [ c program files x86 steam logs ] runtime [ c program files x86 steam steamapps common steamvr e oculus support oculus dash ] version 1 in this example you would remove line 9 completely if another driver was listed under the new amethyst line you would add a comma at the end of that line because it isn't the last item in the list anymore if you edit any of the paths they always need two backslashes like this because the backslash character is used to represent other characters within strings for example n is a new line remove the line s pointing to an older version of the amethyst driver save the file either with ctrl s or going to file > save close the editor and reopen steamvr follow the steps at the top of this page and make sure the driver is enabled you're done 🎉 your amethyst steamvr driver should be working now i did all of the above but i keep on getting 10 if you're still encountering issues you are likely using alvr when you use alvr by default it hides every other add on from steamvr to fix that you need to go to installation then click register alvr driver then finally click restart steamvr in the bottom left how to fix other errors 1 12 10 e t c first you should try restarting your pc restarts are always a good first step failing that if you have any third party firewall software try turning that off and see if it fixes the issue or becomes any of the two above if all else fails come to our discord for help but odds are you might have to diagnose some serious issue on your pc if steamvr fails to launch with error 203 this happens because of a conflict between the k2ex and amethyst drivers you must manually edit the vrpaths file as shown above because steamvr's add on list won't load because it crashed so you can't turn the driver off from there disable conflicting steamvr add ons follow the instructions above and remove any driver where the folder ends with kinecttovr then save the file and relaunch steamvr"},{"title":"What is Augmented Hip","path":"en/aughip/about","plaintext":"what is augmented hip augmented hip is a virtual hip tracking solution which works entirely through software it uses the position of your feet and vr headset to estimate the position and orientation of your hip tracker it does not require any other devices to work and can work with any trackers supported by steamvr including kinect vive trackers and other solutions augmented hip using an htc vive hmd and vive wands for leg tracking note that this was recorded before the vrchat ik 2 0 update how does it work augmented hip uses inverse kinematics to simulate what your body would do in real time this allows for a responsive and mostly accurate hip tracker with minimal computational overhead is augmented hip better than owotrack or a vive tracker the primary advantage augmented hip has over other trackers is the fact that it is purely virtual as a result of this it doesn't need a battery to operate as long as your vr headset and feet are tracking well augmented hip will also track well is augmented hip better than a kinect hip tracker augmented hip might give you more a more responsive hip and make pulling off certain poses far easier than with a kinect hip tracker but this is highly dependent on your setup your mileage may vary is it integrated into amethyst no but we have plans on doing so later"},{"title":"Setting up Augmented Hip","path":"en/aughip/setup","plaintext":"setting up augmented hip augmented hip has been reported to break on setups where alvr is used since i hekky do not own an meta quest i can't fix this of course you can change this by donating to us on opencollective the installer is broken on certain setups if the installer breaks on your setup please follow the manual install instructions on the github repo to setup augmented hip navigate to the augmented hip website and download the installer run the installer making sure steamvr is closed install augmented hip start steamvr and turn on your fullbody trackers"},{"title":"Getting a Kinect and adapter","path":"en/buying-kinect","plaintext":"getting a kinect and adapter when using amethyst you're most likely going to use a kinect other devices are supported but 99 of users are interested in using the app for kinect body tracking if you came here it's because you don't already have a kinect and want to know where and what to buy there's a few recommendations and some huge do nots that you should follow it's easy to end up overpaying or buying broken hardware should you even get a kinect there's other options out there slimevr apriltag vive trackers obviously ps move too kinect is cheap but it has limitations that might make you want to reconsider sideways tracking is almost inexistent any poses that involve your head being lower than your waist e g handstands breakdancing cartwheels backflips can't be done joint rotation is far from perfect unless you provide external data from compatible devices and most of all you need a really large room with xbox 360 kinect you need to stand at least 1 5 meters away from it for tracking to work and preferably 2 meters for the best tracking with xbox one kinect it's more around 1 2 meters minimum and 1 8 preferably you also need to put the kinect where it can see you at eye level and connect to your pc the cable is about 3 meters 9 feet and the adapter adds another 30cm 1 foot and if that wasn't funny enough the kinect especially the xbox one kinect is very demanding when it comes to usb bandwidth generally if you have an amd ryzen computer you're almost guaranteed to be fine laptops and quest 2 with oculus link are notable things that can cause issues if you're unsure i would recommend joining the discord and asking us for advice there which kinect should you get in most cases the answer will be to get an xbox 360 kinect for reasons detailed on this page the xbox one kinect costs a lot more over the xbox 360 and apart from a larger field of view smaller minimum required distance for tracking and a 1080p color camera it doesn't actually track you any better or faster than the xbox 360 kinect it also suffers from a lot of issues with usb 3 0 bandwidth and chipset compatibility and breaks tracking on headsets and controllers using base stations e g vive index pimax if you have a smaller room and can only stand about 1 5 meters away and you've ensured that you have the usb bandwidth to run the xbox one kinect then you might consider it but otherwise just don't where do i buy the kinect if you're in the uk go here don't even ask any questions kinects sold at cex always work the adapters are tested and there's a warranty it's price is also unbeatable it also means you get to ignore the entire part about adapters further down this page elsewhere check either ebay or local classified ads websites any kinect you'll find on amazon is probably overpriced if you search for common mispellings of kinect like xbox connect konect kinnect or similar you'll often find listings from people that lack education on both spelling and money where do i get the adapter get it on ebay please after doing years of suport on the k2vr community discord we found that every user who got shipped a dead adapter had purchased it through amazon i know that some people may be reticent to use ebay because of past experiences but we've had only good feedback from people using ebay on our discord depending on where you live the link for ebay will change but just open the homepage and search kinect 360 adapter and pick the first or second listing whichever has cheaper shipping or if you wanna get it faster buy it from a seller in your country if you don't have ebay you can check local stores classified ads or local ebay like websites e g mercari marketplaats facebook marketplace craigslist e t c once the stuff arrives go to either setting up your xbox 360 kinect or setting up your xbox one kinect depending on the kinect you got"},{"title":"How Amethyst compares to other options","path":"en/comparison","plaintext":"how amethyst compares to other options here's a video demonstrating what amethyst is capable of credit to aze 0002 for recording this demo"},{"title":"Making content about Amethyst","path":"en/content","plaintext":"making content about amethyst amethyst is a complex app it's amde to be easy to use but there's a lot that users can screw up without the right information on hand considerations when making videos we understand the usefulness of video as a medium for conveying information it's perfect for those who prefer a visual approach to learning things and it can allow you to explain complicated concepts more succinctly that being said videos due to their nature are often hard to update especially on platforms like youtube where one might make a tutorial to help others but also for their own gain in views money or notoriety so video creators are often incentivized to leave their content up instead of replacing the video or unlisting it then making another one when the old video has gone out of fashion there are a few things you can follow and keep in mind to make tutorial videos the best they can be be clear and concise in our own documentation and getting started pages we made every page so it could be skimmed over only reading text in bold warnings and lists and still provide all the important information to the user this methodology translates to video as well you don't need to spend 2 minutes explaining what a kinect does people already know that why do you think they clicked on the video don't kid yourself finding a new shiny piece of tech can put rose tinted glasses on you and you'll want to tell everyone about how cool and awesome it is with good reason but if you're going to make an informative video you have to take the glasses off and look at the bigger picture see the flaws in things the problems that can arise because hiding any of the issues to users would just lead to them developing distrust in the software or in you when something breaks timeliness is key videos are stuck in time but that doesn't mean they can't be aware of it make a call out to the official website or even simply to the fact the video could be outdated in the future people can continue watching your video but that way users will know to be careful and double check info elsewhere leading to less issues and better satisfaction with your 3 year old video because you had a really good explanation of the calibration process that clicked with people anecdotal evidence does not make a tutorial if you find some arcane steps to fix some obscure issue you had that wasn't shown anywhere else try reproducing the problem and the fix first researching into why the fix works and possibly asking us over on discord we've seen a lot of weird stuff over the years nothing sucks more than finding a tutorial about a random obscure bug only to find out that the fix only works for the setup of the person who made the video what should you cover amethyst is constantly being updated and worked on the app is in active development while the feature set is mostly set in stone by now things can change drastically at any time even after release future updates may bring large changes kinect is not for everyone while kinect is awesome for it's price some people just want vive trackers and you gotta tell them the truth about kinect it's not perfect sideways tracking breaks down after a few seconds sitting down works fine only under proper tracking conditions users need a large room otherwise tracking quality will take a hit foot rotation is doable but when using nothing but the kinect it won't do miracles any poses where the head is lower than the waist e g handstands are impossible laying down is possible but only in perfect conditions and given you use the tracker freeze feature read the docs we wrote them for you unless a team member says otherwise treat the docs as the most accurate information you can find on the matter we put a lot of work into covering every possible topic please feel free to use the search feature if you're unsure about something you wish to put in a video don't hesitate to ask us on discord xbox 360 kinect > xbox one kinect newer is not always better and it couldn't be more true than with the xbox one kinect between incompatibility with lighthouse devices even stricter and higher usb controller requirements and a hardware flaw that causes the foot rotation to jitter back and forth there's a semi fix in amethyst for it it's really not a good option for anyone compared to xbox 360 kinect you can find more info on this page about the matter avoid amazon when purchasing adapters statistics from our discord server show that every adapter that has been dead on arrival or died later on was purchased from amazon with kinect 360 third party adapters are fine as long as they're not from amazon with kinect one you need to ensure it has a signal repeater and the cables aren't bad and that it says microsoft on it and generally getting a 360 kinect and an adapter for it costs less than a good quality xbox one adapter users need a very large playspace as shown on the improve tracking page the difference between a room that is too small for kinect and one that lets you stand a few meters away is huge it goes from unuseable garbage to fooling people into thinking it's vive pucks as a general rule of thumb tracking starts at about 6ft 2m and isn't very good until 8 9ft 3m as well the user needs to be able to place the kinect around chest to eye level putting it very low or on the floor will yield worse results equally putting it too high will also result in bad tracking quality some usb controllers are not compatible at all usb controllers are the actual chipset mini cpu things on your motherboard or laptop logic board that take care of handling the in out data from usb devices these controllers are made by multiple manufacturers and certain models are not made very well and driver updates can't fix them here's a list of very bad ones asmedia 3 0 controllers via 3 0 controllers pre ryzen amd 3 0 controllers fresco logic 3 0 controllers these should be avoided you can see what host controllers you have in device manager under the universal serial bus controllers section point users to the website not github or our discord the website is made to cover everything the user may need to know about amethyst and it's supported devices and apps and it will point the user towards the installer download avoid using direct github links because then we need to put warnings on every corner to ensure users are always getting the latest info run the installer follow the on screen instructions the installer is built to be easy to use and understand you should not have to explain how it works to the user users will run into problems assume that only 1 in 100 users will have a flawless setup experience it's very common for the kinect sdk to randomly break for a multitude of reasons or for other problems to happen there are a lot of moving parts to the kinect full body setup after all and most importantly remind users to tell us that they came from your video if they come to our discord server this will help us in knowing exactly what instructions were given to them and what they could've misunderstood causing the error they're having in conclusion i'm sorry that this seems rather draconian you can ignore half of these things but if you make a video that gets popular and has a lot of wrong info in it causing misinformation to be spread you're gonna hear from us happy video making"},{"title":"Tracking Devices (Providers)","path":"en/dev/devices","plaintext":"tracking devices both the plugin contract and amethyst itself are still in the technical preview stage and you may need to manually update your plugins to work with the latest version of amethyst we'll try to keep the api backward compatible as much as we can though plugins implementing itrackingdevice as you already know to provide tracking data to amethyst you need to export a plugin implementing the itrackingdevice interface and exporting it with proper attached mef metadata feeding amethyst with your data the main principle of amethyst device plugins is the observablecollection of trackedjoint objects named trackedjoints which is used to provide the tracking data to amethyst you need to populate this collection with the joints you want to track and update their values as you receive them from the device you're handling on each update call either by amethyst or manually each trackedjoint has a name and a role trackedjointtype the trackedjointtype enum is used to define the role of the joint and is used by amethyst to auto assign selected joints to their respectable trackers all of the skeleton ms kinect v2 provides is covered and for joints you don't know which role to assign we have a special jointmanual role it will stop amethyst from auto assigning the joint to any suitable tracker and show a picker instead only the devices providing a jointhead joint will be allowed to use the automatic calibration within amethyst trackedjoints can provide physics for connected services to run appropriate calculations on to use it you will need to set your device's isphysicsoverrideenabled to true and feed the joints with physics data for each selected base tracking device and currently selected service amethyst will try to find such a joint in your exported device that satifies each supported tracker type in the service if it doesn't find a suitable joint a manual picker will be shown in the devices tab under the base tracking device section you may mark all your joints as manual and force the user to pick them manually though relieving innit also overrides don't use this assignment system and don't really need it note this only applies to joints with jointmanual role you should read this if you're going to use the jointmanual role amethyst uses relative joint indexing taking their ids from the trackedjoints list this means that each time you append joints to the list you need to make sure they're in the exact same order as previously otherwise amethyst may get confused and reset a particular tracker to the first joint requiring a manual re assignment device states each device plugin has various properties used to indicate its state and provide more information about the most important ones are devicestatus used to indicate the current state of the device 0 for success and isskeletontracked used to indicate whether the device is currently tracking the user or not to enrich the experience plugins are also to provide a stringized version of their statuses under the devicestatusstring property this is used to display the status of the device and must have the following format not defined ne not defined nstatus message not defined header n code n message to help your users understand the error better or to provide handling for it you can set errordocsuri to a custom uri the link will be launched by amethyst when the user clicks the 'view docs' button in the status message note this is an uri so it supports custom protocols for example ms settings or host something and any valid uri's amethyst will use launchuriasync to open your link so make sure it's valid and there exists a valid an app to handle it device properties other helper properties are used to indicate both the state and the usage of a device you can opt out of automatic update calls or opt in to flip support assuming your device provides a proper head joint | device property | what is it used for | | | | | isinitialized | check if the device has been tried to be initialized by amethyst not if it's working you probably want to set this to true on initialize and reset back to false on shutdown | | isskeletontracked | whether the device sees the user and tracks their body to indicate a single joint isn't being tracked properly set its trackingstate accordingly | | ispositionfilterblockingenabled | you can block pose filtering of trackers your device is used to feed data to within amethyst suitable if you have your own filtering or use joint physics | | isphysicsoverrideenabled | used to indicate your device will provide joints which contain complex physics data used by services like openvr to run their advanced pose prediction on | | isselfupdateenabled | set this to true if you want to stop amethyst from calling update on your device and update everything on your own instead | | isflipsupported | if your device can't tell whether the user is facing it or not and wish to support skeleton flip mirrored tracking please set this to true | | isapporientationsupported | enable additional feet orientation options by setting this property to true you will need to provide foot tip foot and knee joints | | issettingsdaemonsupported | if you want to provide custom settings interface displayed underneath the device set this property to true you'll need to push a xaml page to the settingsinterfaceroot object | | settingsinterfaceroot | applicable only when issettingsdaemonsupported is enabled holds a xaml page microsoft ui xaml controls page of your device settings example here onload | | devicestatus | device status code set to 0 to indicate success | | devicestatusstring | stringized status must have format similar to title n code n message | | errordocsuri | the link to launch when 'view docs' is clicked while the device is reporting a status error supports custom protocols e g host link | device methods device methods are used by amethyst to control the device and call events on it | device method | what is it used for | | | | | onload | called when the plugin has just been loaded and on each recompose you probably want to update your settings interface here if you provide any | | initialize | used to initialize turn on the device plugin may be called both automatically and manually without any shutdown calls prior to | | shutdown | used to shudown turn off the device plugin called on exit may be called both automatically and manually without any initialize calls prior to | | update | called each internal update loop iteration unless you opt out by setting isselfupdateenabled to true | | signaljoint int | requests a signal of a device joint from the trackedjoints collection can be ignored if not supported |"},{"title":"Host Import (Amethyst)","path":"en/dev/host","plaintext":"iamethysthost import both the plugin contract and amethyst itself are still in the technical preview stage and you may need to manually update your plugins to work with the latest version of amethyst we'll try to keep the api backward compatible as much as we can though importing iamethysthost by importing the iamethysthost interface and using it plugins can also request other data from their host and invoke functions within amethyst itself you can acquire various runtime configuration variables request a reload of your plugin's interface and status or even stop the update loop for a moment via a scoped lock though it may appear possible to import the iamethysthost extension from any even a non exported class the import will not be met in that case that is because the host is exported for each plugin completely separately and may only be imported from a valid exported plugin to use the host in child classes you can either forward it or set up events you can find an example here sample import declaration of the iamethysthost interface [export typeof iserviceendpoint ] [exportmetadata name sampleservice ] [exportmetadata guid scontoso ame2 apii sndp dvcesmplsndp ] public class sampleservice iserviceendpoint [import typeof iamethysthost ] private iamethysthost host get set host properties other helper properties are used to indicate both the state and the usage of a device you can opt out of automatic update calls or opt in to flip support assuming your device provides a proper head joint | host property | what is it used for | | | | | appjointposes | helper to get all joints' positions from the app which are added in amethyst note if joint's off its trackingstate will be itrackedjointstate state nottracked note [appjointposes] will always be returned raw and without tweaks offsets if need the final ones please consider writing an iserviceendpoint | | hmdorientationyaw | get the raw hmd yaw from the current service endpoint note or 0 if the current service doesn't provide one | | hmdpose | get the raw hmd pose from the current service endpoint or zero identity if the service doesn't provide one | | languagecode | currently selected 2 letter language code in amethyst e g en de ja | | docslanguagecode | currently selected 2 letter language code in amethyst web docs e g en de ja | | pluginsettings | get set a serialized object from to the plugin settings access either via getsetting pass the desired type and optionally the fallback value for or setsetting types you save must either be serializable by tostring or the newtonsoft json json net serialization library | | updatethreadlock | lock the main update loop while in scope with [lock updatethreadlock ] this will block ame from updating while locked and also wait for when the lock is available > multiple plugins can never lock it at the same time | this is got from the selected service providing the headsetpose property as used by amethyst to execute automatic calibration and additionally by some devices to calculate their poses hmd wise or zero identity if the selected service returns null as for the requested vr hmd head pose hmdorientationyaw is a flat projected yaw of the hmd's orientation and of course in radians host methods device methods are used by amethyst to control the device and call events on it | host method | what is it used for | | | | | gethookjointpose bool | get the hook joint pose typically head fallback to first of the currently selected base tracking device no overrides mark [calibrated] as [true] to get the calibrated joint pose note [appjointposes] will always be returned raw and w o tweaks offsets if need the final ones please consider writing an iserviceendpoint | | gettransformjointpose bool | get the pose of the relative transform origin joint typically waist fallback to first then default of the currently selected base device no overrides mark [calibrated] as [true] to get the calibrated pose note [appjointposes] will always be returned raw and without tweaks offsets if need the final ones please consider writing an iserviceendpoint | | istrackedjointvalid trackedjointtype | check if the base tracking device provides a joint with the selected role note this only applies to the tracking device set as base not overrides | | log string | object logseverity | log a message to amethyst logs handler prepends your plugin's guid as a decoration | | playappsound soundtype | play a sound from amethyst's resources | | refreshstatusinterface | request a refresh of the status name etc interface rebuild joints and their settings use wisely may temporarily slow down body tracking | | requestlocalizedstring string | request a string from ame resources empty for no match warning the primarily searched resource is the device provided one | | setlocalizationresourcesroot string | request a folder to be set as device's ame resources you can access these resources with the lower function later after onload warning resources are containerized and can't be accessed in between devices warning the default root is [plugin folder path] resources strings | | displaytoast tuple string string | show a windows desktop toast notification | | requestexit string bool | request an application exit non fatal by default mark fatal as true to show the crash handler with your message |"},{"title":"Overview","path":"en/dev/overview","plaintext":"what's the amethyst plugins contract and how does it actually work both the plugin contract and amethyst itself are still in the technical preview stage and you may need to manually update your plugins to work with the latest version of amethyst we'll try to keep the api backward compatible as much as we can though amethyst net plugins plugins are the base of how amethyst works they are used to feed the app with the body tracking data of your choice itrackingdevice and then for receiving it iserviceendpoint parsed and processed accordingly multiple plugins can be used to provide tracking data at a time the base device and optionally one or more override devices but only one actual tracking output is supported the service mef provides support for exporting multiple plugins from one assembly and amethyst will load them satisfy their optional imports on one by one basis though it is actually possible to use we stronly encourage you to separate your plugins each inside its own container assembly this will help you keep a clean codebase and minimize potential errors your plugin assembly the dll file will need to be named like plugin for amethyst to find it multiple plugin assemblies can be put in one folder and the folder name may be completely random please just remember to name the exported assembly file like plugin to skip the unnecessary pain interfacing with amethyst by importing the iamethysthost interface and using it plugins can also request other data from their host and invoke functions within amethyst itself you can acquire various runtime configuration variables request a reload of your plugin's interface and status or even stop the update loop for a moment via a scoped lock though it may appear possible to import the iamethysthost extension from any even a non exported class the import will not be met in that case that is because the host is exported for each plugin completely separately and may only be imported from a valid exported plugin to use the host in child classes you can either forward it or set up events you can find an example here plugin metadata that said you also have to decorate each of your plugins with exported metadata which amethyst will read and parse prior to loading your actual plugin assembly you have to export a display name for your plugin one for each exported device or service and a serial for it we'll call it guid the exported metadata may also include a publisher name and a website your plugin source or documentation resides sample plugin metadata export [exportmetadata name sampleplugin ] [exportmetadata guid scontoso ame2 apii dvce dvcesmplugin ] [exportmetadata publisher contoso ] optional [exportmetadata website https contoso com ] optional this sample metadata will attribute a plugin with displayed name sampleplugin internally labeled by its guid as scontoso ame2 apii dvce dvcesmpldvce by contoso pointing to its site https contoso com plugin guids must not repeat if a plugin declares an already exisitng guid it will be discarded upon initial loading and marked as invalid it will be shown as a duplicate in the amethyst plugin manger these decorations must be put on top of the public class [plugin] [interface] class defintion choosing the plugin type writing a plugin you will need to pick the interface to be implemented your plugin will either feed the app with the body tracking data of your choice itrackingdevice or be used for receiving it iserviceendpoint sample trackingdevices include microsoft kinect or psmoveservice and a sample serviceendpoint is steamvr plugins are separated via assembly load contexts and cannot use import other loaded already loaded plugins no matter how hard they would try to do so | itrackingdevice | iserviceendpoint | | | | | provides the trakcing data to amethyst | receives parsed and processed data | | multiple devices can be used at the same time for compound tracking | only one endpoint can receive data from amethyst at a time see below | though only one iserviceendpoint can receive the tracking data at a time you can request the plugin host amethyst to send you raw poses of its internal tracker objects do it so by calling appjointposes on your imported iamethysthost choosing the language plugins can be written in all microsoft interface projectable languages but exported only from these of net core that means you can write your plugin in c f or even swift and import it to your c exported plugin an example of such a plugin is the official owotrackvr plugin written in c winrt then projected to c and exported we strongly recommend using c for all plugins whenever possible example the official kinect v2 plugin you can also combine languages and an example of which is the kinect v1 plugin which base is written in c cli then referenced from a c plugin which is then exported to amethyst you can also export your plugin directly from any net core language c c cli vb net f though declaring custom plugin settings user interface is only available for c and c winrt projected plugins closing a plugin using vb net is the official psmoveservice plugin for examples of serviceendpoints please check out our official openvr steamvr and vrchat osc plugins you can safely import everything you need to please remember about trimming your plugin for it to be more lightweight though additionally we recommend making sure that your plugin is self contained when publishing it because no one knows what's gonna be missing on the user's machine if some dependency fails to resolve your plugin will not be loaded by amethyst and an appropriate log will be written to note that you may want to enable lazy loading to save your time and nerves then an unresolved dependency will cause a composition error and add your plugin to the load attempted plugin list instead of making amethyst silently reject even trying to load the plugin here are some possible language configurations for your plugin net supported pure [recommended easy] c > the easiest one to implement maintain and deploy quite scalable and fast generally recommended because of wide access to packages extensions and docs also takes the least time to write plugins in can use c c stuff via c cli clr wrappers and p invoke or projected winrt methods midl winmd if when needed supports amethyst settings interface via windows app sdk and or cswinrt c cli > c but with sick syntax can't actually use native stuff like stl and c libraries suitabke for devs who prefer manual management of stuff c syntax or plan on extending their pure plugin with mixed clr mode use dynanically aligned c stuff inside their plugin static is simply and strictly not supported quite large compilation times and output mixed mode is kinda more recommended amethyst settings interface not supported f > only if you're a js developer looking for a familiar syntax plugins involving data science handlers or just somehow like it generally small user and usage base although all net stuff is probably ok amethyst settings interface not supported visual basic net > only if you like vb net or are already quite familiar with it similarly to f generally small user and usage base although all net stuff is probably ok very simple to start with and develop in though that's pretty much all of it amethyst settings interface not supported clr supported mixed [intermediate] c cli > you can use both managed net and native c types great for devs who have some grasp over both c c and need to use both of them in their plugin you can use most stuff from both language and runtime types although with several limitations this mode mixed clr mode may only use dynanically aligned c stuff inside the plugin static alignment is simply and strictly not supported in this case amethyst settings interface not supported projected pure native [recommended advanced] winrt > you create a device handler shim in c and call your handler methods using projection this is the best approach for most larger already existing plugins you typically want to use c winrt runtime library cppwinrt as your plugins implementation handler though any winrt enabled language is ok uses a severe amount of resources upon compilation generation pre deployment supports amethyst settings interface via windows app sdk and or cswinrt from the level of the c shim handler"},{"title":"Service Endpoints (Receivers)","path":"en/dev/services","plaintext":"service endpoints both the plugin contract and amethyst itself are still in the technical preview stage and you may need to manually update your plugins to work with the latest version of amethyst we'll try to keep the api backward compatible as much as we can though plugins implementing iserviceendpoint to receive tracking data to amethyst you need to export a plugin implementing the iserviceendpoint interface and export it with proper attached mef metadata receiving data from amethyst amethyst sends the processed tracking data to the currently selected service using its updatetrackerposes method this method is called after each device is updated with its update call and the received data is processed upon spawning the selected trackers amethyst will call settrackerstates with a collection of the applicable trackers each time the function will be called once or 3 to 5 times periodically the testconnection method of your service will be used to check the approximate service delay and the internal service connection status currently all trackers which openvr supports are the officially supported ones one for each role the ones supported by default are only feet and waist though to enable support for more trackers populate the additionalsupportedtrackertypes property with all the applicable trackertypes example additionalsupportedtrackertypes > unsupported trackers will be disabled and blocked from user interactions setting tracker states settrackerstates settrackerstates will be called to set states of all the enabled trackers within the supported ones and from time to time while amethyst is running this method is a task so make sure to either return a task builder for it or implement it as an async task and then like a standard declared function sample declaration assuming implementation as an async task public async task> settrackerstates ienumerable trackerbases bool wantreply true trackers to set state of will be provided in the trackerbases collection the wantreply argument is there yo save your time ―　if amethyst doesn't want any confirmation it will allow you to return null from this function otherwise make sure to return a collection of tuples of the tracker you've received paired with the result of the set you've just made there must be as many returned tuples as there is sent trackers see a sample here settrackerstates updating tracker poses updatetrackerposes updatetrackerposes will be called to update poses of all the enabled trackers within the supported ones each update loop while amethyst is running and trackers are turned on initialized this method is a task so make sure to either return a task builder for it or implement it as an async task and then like a standard declared function sample declaration assuming implementation as an async task public async task> updatetrackerposes ienumerable trackerbases bool wantreply true trackers to update pose of will be provided in the trackerbases collection the wantreply argument is there yo save your time ―　if amethyst doesn't want any confirmation it will allow you to return null from this function otherwise make sure to return a collection of tuples of the tracker you've received paired with the result of the update you've just done there must be as many returned tuples as there is sent trackers see a sample here updatetrackerposes testing connection testconnection testconnection will be called to test the connection to the service each time the service is set up or refreshed you will need to return a tuple of status int ― the return code of course 0 for success messgae string ― stringized status message only saved in logs ping time long ― the ping time in ticks 10000ths of a ms this method is a task so make sure to either return a task builder for it or implement it as an async task and then like a standard declared function service states each service plugin has various properties used to indicate its state and provide more information about the most important ones are servicestatus used to indicate the current state of the device 0 for success and isrestartonchangesneeded used to indicate whether the service needs to be restarted after adding more trackers after setting the state of the existing ones to connected e g openvr needs this to enrich the experience plugins are also to provide a stringized version of their statuses under the servicestatusstring property this is used to display the status of the device and must have the following format not defined ne not defined nstatus message not defined header n code n message to help your users understand the error better or to provide handling for it you can set errordocsuri to a custom uri the link will be launched by amethyst when the user clicks the 'view docs' button in the status message note this is an uri so it supports custom protocols for example ms settings or host something and any valid uri's amethyst will use launchuriasync to open your link so make sure it's valid and there exists a valid an app to handle it input actions controllerinputactions the controllerinputactions property of type inputactions will be used by amethyst or not if you set it to null to execute manual calibration provide a way to quickly toggle selected settings get controller data and show selected teachingtips | class property | what is it used for | | | | | movepositionvalues | position move values during manual calibration x y z | | adjustrotationvalues | rotation adjust values during manual calibration pitch yaw | | calibrationmodechanged | fire this event to change the calibration mode pos rot | | calibrationconfirmed | fire this event to confirm manual calibration | | trackingfreezetoggled | used to toggle freeze from another source like input bindings controllers whatever else | | skeletonfliptoggled | used to toggle skeleton flip from another source like input bindings controllers whatever else | | trackingfreezeactiontitlestring | [title] shown when tracking freeze is toggled manually explains what to press to toggle it from here leave null or empty to skip showing anything | | trackingfreezeactioncontentstring | [text] shown when tracking freeze is toggled manually explains what to press to toggle it from here leave null or empty to skip showing anything | | skeletonflipactiontitlestring | [title] shown when skeleton flip is toggled manually explains what to press to toggle it from here leave null or empty to skip showing anything | | skeletonflipactioncontentstring | [text] shown when skeleton flip is toggled manually explains what to press to toggle it from here leave null or empty to skip showing anything | service properties other helper properties are used to indicate both the state and the usage of a device you can opt out of automatic update calls or opt in to flip support assuming your device provides a proper head joint | service property | what is it used for | | | | | issettingsdaemonsupported | if you want to provide custom settings interface displayed underneath the device set this property to true you'll need to push a xaml page to the settingsinterfaceroot object | | settingsinterfaceroot | applicable only when issettingsdaemonsupported is enabled holds a xaml page microsoft ui xaml controls page of your device settings example here onload | | servicestatus | service status code set to 0 to indicate success | | servicestatusstring | stringized status must have format similar to title n code n message | | additionalsupportedtrackertypes | used to check which tracker types are supported by the service except for feet and waist which are supported by default | | isrestartonchangesneeded | indicates whether the service needs to be restarted after adding more trackers after setting the state of the existing ones to connected e g openvr needs this | | controllerinputactions | used to get an instance of the service's controller input actions handler please see upper for more details | | autostartamethyst get set | check or set if starting the service should auto start amethyst this is only available for a few actual cases like openvr | | autocloseamethyst get set | check or set if closing the service should auto close amethyst this is only available for a few actual cases like openvr | | isamethystvisible | check if amethyst is shown in the service dashboard or similar and block the skeleton preview to save system resources leave this as true if you have no actual way to check | | trackingsystemname | used by amethyst to check what device is the servie outputting to example values are vive wmr defaults to oculus | | headsetpose | get the absolute pose of the hmd calibrated against the play space return null if unknown to the service or unavailable you'll need to provide this to support automatic calibration | | errordocsuri | the link to launch when 'view docs' is clicked while the service is reporting a status error supports custom protocols e g host link | the headsetpose property is used by amethyst to execute automatic calibration and additionally by some devices to calculate their poses hmd wise set it to null if you have no way to check where the vr headset it just remember that doing so will make automatic calibration unavailable in such case it's a good idea to provide proper controllerinputactions this pose is also returned from amethysthost's hmdpose property getter or zero identity if you decide to return null the controllerinputactions property is used by amethyst to execute manual calibration and additionally to provide a quick settings toggle option set it to null if you have no way to get this data just remember that it will make manual calibration unavailable service methods device methods are used by amethyst to control the device and call events on it | service method | what is it used for | | | | | onload | called when the plugin has just been loaded and on each recompose you probably want to update your settings interface here if you provide any | | initialize | used to initialize turn on the service plugin may be called both automatically and manually without any shutdown calls prior to | | shutdown | used to shudown turn off the service plugin called on exit may be called both automatically and manually without any initialize calls prior to | | heartbeat | called each internal update loop iteration right after update has been called on all applicable devices but still before composing the final poses | | displaytoast string | implement if your service supports custom toasts services like openvr can show internal toasts can be ignored if not supported | | requestservicerestart string bool | used by amethyst to request your service to be restarted or show a user consent message it needs a restart return success or null if wantreply is false | | gettrackerpose string bool | used by amethyst to find an already exisitng body tracker within your service and get its pose use contains to find trackers with role serial containing the passed key canbefromamethyst is used to indicate whether the tracker may be of amethyst's return null if not supported |"},{"title":"Common issues with Xbox One Kinect","path":"en/one/common-issues","plaintext":"common issues with xbox one kinect this page is aimed at users wishing to buy a kinect or have an xbox one kinect but no adapter unless you use a headset and or controllers that use base stations you can make it work even if it won't be as good as with the xbox 360 kinect this page is about using xbox one kinect for full body tracking in virtual reality if you were linked here from elsewhere on the internet not all of this info will apply but it's still important to keep in mind newer is not always better after a few years of doing support on kinecttovr k2ex and now amethyst we've found that xbox one kinect is more trouble than it's worth here's all the reasons tracking quality is same as xbox 360 kinect the kinect for windows sdk v2 0 for xbox one kinect uses the same body tracking algorithms internally as the sdk v1 8 for xbox 360 kinect it had different training data but the same limitations were imposed on it for performance reasons every pose that the xbox 360 kinect cannot do the xbox one kinect cannot either incompatibility with base station devices devices that use base stations for tracking like vive index tundra or pimax headsets trackers and controllers are incompatible with xbox one kinect the time of flight sensor on the xbox one kinect confuses these devices into thinking an invalid base station is present and thus blocks them from tracking either completely or in large blind spots foot rotation as of amethyst 1 1 0 0 a new rotation mode was added specifically to alleviate the foot rotation issues it's called leg based orientation you can find it in settings > tracker configuration > feet trackers > orientation tracking > leg based orientation the behavior is similar to xbox 360 kinect's default rotation mode but the feet mostly face forward there is an unfixable hardware flaw of the xbox one kinect that makes it create a fog near the floor because of the way the infrared bounces are modulated on the sensor as long as your feet are inside the fog foot rotation will jitter back and forth continuously using the software calculated rotation option in amethyst's tracker configuration screen will help but cannot solve the issue entirely usb bandwidth and host controller compatiblity the xbox one kinect is a usb 3 0 device and requires nearly the entire sustained 5gbps bandwidth that usb 3 0 can provide not all usb controllers are made equal and some either have issues with bandwidth heavy devices or simply do not work you can check what usb host controllers you have by opening device manager then expanding the universal serial bus controllers section all the devices labelled something something host controller here's a list of usb host controllers that work renesas usb 3 0 amd usb 3 1 amd usb 3 2 intel usb 3 1 intel usb 3 2 asmedia usb 3 1 and a list of controllers that don't work via usb 3 0 asmedia usb 3 0 amd usb 3 0 non ryzen fresco logic usb 3 0 the temperature sensor is a ticking time bomb inside the xbox one kinect is a temperature sensor to ensure that the kinect acn shut down in the event that the fan fails or the ventilation gets obstructed this temperature sensor uses analog components and it tends to go bad on a lot of xbox one kinect sensors once it does the kinect will reboot in a loop until you manually fix the issue by cutting the wires going to it inside the device adapters are expensive and prone to breaking unlike with xbox 360 kinect third party adapters aren't a sure fire win every time many factors come into play to make a good xbox one kinect adapter the ameperage required is higher than xbox 360 kinect the cables need to do usb 3 0 and the main box needs to have a signal repeater inside to ensure the usb 3 0 signal isn't degraded as it goes through the entire length of the cable most third party adapters do not do this nor were they ever actually tested instead you end up with 20 dollar e waste 40 dollar adapter gambling or 70 dollar microsoft money wasting in most countries an xbox 360 kinect and a third party adapter can be had for less than the bad xbox one kinect adapters considering this there is no reason to get an adapter if you already have an xbox one kinect just get an xbox 360 kinect instead the sdk provides no clear errors to the user unlike the numerous admittedly non descriptive at first glance errors of the xbox 360 kinect's v1 8 sdk the v2 0 sdk has two states it works or it doesn't leaving you the user to figure out why things broke from trial and error it costs too much while it isn't hard to find an xbox one kinect for pretty cheap nobody wants them that doesn't stop the fact that getting a good adapter and possibly a usb 3 0 pcie card to actually get the thing working on your computer gets expensive fast compared to xbox 360 kinect in conclusion if all you wanna do is play just dance or do 3d scanning go ahead but expect jank"},{"title":"Setting up your Xbox One Kinect","path":"en/one/setup","plaintext":"setting up your xbox one kinect unlike with the xbox 360 kinect the kinect one drivers are readily available from windows update please use the windows update driver instead of the older manually installed sdk you can see instructions on doing that on this page placement the kinect one has a very high vertical field of view this means you can be more lenient in where you place it we recommend having it at around chest height facing perfectly straight in general avoid pointing it down at the floor the infrared bouncing back is what causes your feet to become mostly invisible and breaks foot rotation calibration once you've done this put on your vr headset and get the trackers calibrated"},{"title":"Xbox One Kinect troubleshooting","path":"en/one/troubleshooting","plaintext":"xbox one kinect troubleshooting figuring out what is going wrong with the xbox one kinect isn't as easy as with 360 because the sdk doesn't provide errors beside a generic sensor is unavailable you have to look for other signs in usb devices drivers and such hopefully this page helps you fix your problem hardware first and foremost you should ensure everything hardware wise is in order there's no point in trying to diagnose issues if a cable is loose or you don't have the kinect plugged into a compatible usb controller check your cables ensure that every connection from the kinect mains power and adapter is connected firmly and that your cables aren't damaged sometimes a usb 3 cable that is too long from the adapter to the computer can cause issues too usb controllers the xbox one kinect is incompatible with these usb controllers any usb 2 0 controller asmedia 3 0 fresco logic via it's recommended that you have one of these renesas nec 3 0 amd 3 1 or above ryzen cpus intel 3 1 or above asmedia 3 1 in the case where you have none of the above on a desktop with an available pcie slot you can purchase a usb add in card with a renesas controller by searching for usb pcie renesas on amazon or other online stores if you're on a laptop and you don't have intel 3 1 or ryzen why are you even trying to use vr drivers unlike with k2ex we now recommend that you use the newer drivers that are distributed through windows update for the kinect v2 the old drivers are version v2 0 1409 and include an sdk for developers the new drivers are version v2 2 1905 and only include the required runtime if your kinect appears as a webcam in apps like discord then you're already using the newer driver if you installed the sdk manually you can just leave it there and update only the kinect driver open device manager expand the kinect sensor devices category right click the kinect device click on update driver choose search automatically for drivers let windows update do it's magical thing obviously this requires windows update being functional other issues here's a few other things that could have gone wrong faulty adapter it's common for kinect v2 adapters to be hit or miss check that all the cables are firmly plugged in and that the adapter is receiving power on the official one the light should be orange it's also possible with cheap adapters that the signal is being degraded either through cheap wiring or cables that are too long it's not like they actually test it low framerate low framerates are usually caused by there being other devices on the same usb controller taking just enough bandwidth that the kinect can still start but can't send it's full data through basically try unplugging everything usb near the kinect temperature sensor inside the kinect is a fan and a temperature sensor attached to that fan because it's an analog part it can go bad over time and report very high temperatures in error you need to open the kinect up with a torx t2 screwdriver then cut the yellow and blue wires and put some electrical tape to cover them up this will disable the temperature sensor here's a video showing how to do it foot rotation the default rotation mode for xbox one kinect allows you to turn your feet freely the problem is that in 99 of cases your floor and everything near it are invisible to the kinect because only your legs are visible to the kinect in amethyst you should switch the orientation tracking mode for the feet trackers to leg based orientation it's not perfect but will fix the issue"},{"title":"Setting up the Amethyst OSC plugin for Quest","path":"en/osc","plaintext":"setting up the amethyst osc plugin for quest pre requisites amethyst is for kinect tracking mostly we do not have support for 2d cameras and most likely never will as long as your computer runs an up to date version of windows 10 or 11 and was built in the last decade you're most likely good to go we recommend taking a look at the usb controllers section in amethyst installer you should have at least one compatible controller to have a good experience as well you need to have some kind of compatible hardware like xbox 360 kinect xbox one kinect or a complete playstation move ps3 eye setup in psmoveserviceex part 1 wi fi is not internet the speed of your internet connection what allows you to visit websites and play online games does not matter in fact you could have the old 90s dial up internet with the funny modem sounds and it wouldn't matter because osc goes over the network you need to make sure your quest is connected to the same local network as your pc this part only really applies if you have two wi fi routers you would probably know if you have two of those if your pc is connected to the router with a cable then make sure the quest is connected to the wi fi network that router is on if you're using a wi fi adapter on your pc or using a laptop make sure the pc and the quest are on the same wi fi network this isn't guaranteed to work but sometimes you will have separate wi fi networks for the 2 4ghz and 5ghz bands and some routers will only show devices on the 2 4ghz network to devices connected with a cable so try connecting to the 2 4ghz wi fi specifically if they are separate though 5ghz is preferable open the quest's universal menu click on quick settings on the left side quick settings in the quest main menu click on wi fi wi fi in the quest quick settings connect to the desired network if it isn't already click the network itself once it's successfully connected wi fi in the quest quick settings scroll down to advanced then click on that wi fi in the quest quick settings scroll further down until you see ip address wi fi in the quest quick settings this is what other devices in your house see the quest as and you will need to enter it in amethyst so keep note of it part 2 setting up vrchat launch vrchat on the quest open the action menu the round one by pressing and holding one of the quick menu buttons go to options then osc and toggle on enabled enabling osc it's easy to forget this step and then spend 20 minutes wondering why it's not working so make sure to do it now instead of later you are now ready to receive osc tracker data part 3 installing amethyst and the plugin install amethyst using the button below download latest amethyst installer version in the installer select the osc trackers option part 4 final setup you now have vrchat ready to accept osc input and amethyst ready to send osc to the quest start amethyst do not connect trackers click the dropdown next to the hide skeleton button in the corner of the black window then check on force preview force skeleton preview on make sure the kinect can track you properly ideally make sure it can track your head see the improve tracking page for tips to get the best tracking out of your kinect go to the settings tab on the left of the app search for endpoint make sure it says osc insert the ip address of your quest from earlier do not change the ports go back to the home page click the connect trackers button launch vrchat on your quest open the quick menu the square one for testing sake please try a default public avatar first let's change a few settings for a better experience in the quick menu click the settings tab the one with the gear icon scroll down to tracking and ik change the avatar measurement to height scale once you've changed avatars open the quick menu again and click on calibrate fbt you will be in a t pose with the trackers represented as spheres you can bind into the avatar by pressing both triggers together open the quick menu again and return to settings then tracking and ik this time change lock behavior to lock head specifically this allows the kinect trackers to drift back into position over time and makes your overall body position based on your headset movement it looks a lot better for kinect open the quick menu again click on calibrate fbt you will be in a t pose with the trackers represented as spheres open the quick menu again go to settings then tracking and ik you can confirm the calibration by pressing both triggers together enjoy fbt on quest part 4b what to do the next time around start amethyst make sure the kinect can track you properly go to the devices tab on the left of the app click on amethyst osc change device ip to the one you took note of earlier click connect trackers osc launch vrchat on your quest open the quick menu the square one click on calibrate fbt you will be in a t pose with the trackers represented as spheres open the quick menu again go to settings then tracking and ik click on auto center osc trackers if the tracker movement is mirrored in vrchat compared to what you're doing click the auto center button again you can bind into the avatar by pressing both triggers together"},{"title":"What is owoTrack","path":"en/owo/about","plaintext":"what is owotrack owotrack is an open source app originally created by globalindustrial to use any compatible phone as a waist tracker by using the phone's onboard sensors is using owotrack worth it yes todo insert owotrack demonstration video here can i use a smartwatch if it supports wearos yes you can check if it supports wearos by going here can i use multiple phones amethyst only supports up to one owotrack device currently if you wish to use multiple devices for owotrack simultaneously we recommend using the psmoveserviceex's virtual device manager"},{"title":"How to configure and use owoTrack","path":"en/owo/setup","plaintext":"how to configure and use owotrack can i use my samsung smart fridge for this owotrack requires a compatible phone and a stable wifi connection a stable wifi connection does not mean that you need a stable internet connection to use owotrack look we've tried using owotrack with amethyst inside of amethyst navigate to the devices page then select owotrack click the refresh button to start the server open owotrack on your mobile device and enable auto discovery point your phone forward like a remote calibrate forward place your phone upright with the screen facing towards you and place it in your pants or however you're mounting your phone calibrate down you're using owotrack now installing owotrack android 4 4 kitkat or newer check if your phone has an accelerometer and a gyroscope by going to gsmarena and checking if your phone has these sensors download the owotrack app from google play ios 12 1 or newer download and install owotrack through the app store troubleshooting disabling the steamvr add on amethyst is not compatible with the owotrack steamvr add on you must disable owotrack from steamvr settings > startup > add ons disable owotrack steamvr add on firewall your firewall might prevent owotrack from being able to connect to your computer please make sure that ports 6969 and 35903 are open on udp amethyst installer automatically handles this for windows firewall but you may need to open these ports on other firewalls if you have any"},{"title":"Amethyst roadmap","path":"en/roadmap","plaintext":"amethyst roadmap this page is about what we're working on and planning this can change at any time without warning as well there are no etas for anything we release stuff when it's ready near future elbow tracking improvements elbow trackers on kinect are currently just using the direct elbow point from the kinect skeleton this isn't the best because games like vrchat expect the tracker to be a little before the elbow on your forearm for more stability and to get the shoulder position the elbows will now mix in the shoulder data from the skeleton to account for this tracking improvements this is basically low hanging fruit we're looking into implementing into amethyst to possibly improve tracking tenfold we will be using a mix of various kinematics techniques to compensate for when the kinect loses confidence in its tracking meaning there should be less instances of glitchy legs this won't magically solve the tracking if you're standing too close but it will improve the quality overall in situations that were previously borderline unusable more details will be revealed when ready semi far future the stuff here is in the planning and can we even do this is this worth it stages none of these are guaranteed to be arriving to amethyst ai based kinect tracking 99 of the kinect's limitations are due to it using a proprietary skeleton tracking sdk created by microsoft research in the mid 2000s they were using what was considered state of the art in machine learning at the time but even then also had to make sure it ran on 10 of an xbox 360 so they made a ton of concessions limited the training dataset to poses they deemed useful for xbox games and imposed hardcoded limitations like the kinect always facing forward we wish to take the kinect's depth map and create our own pose estimation neural network with the help of the community to gather a large dataset this is very still in the planning stages but we're really hopeful we can pull it off amethyst on linux this one is a maybe with amethyst net the ui and the logic are being decoupled meaning that in theory amethyst could run as a net core app on linux with it's ui in uno platform the kinect plugin would not have skeleton tracking unless we've got ai tracking working by then psmove couldn't work psmsex is windows only so you'd be left with owotrack and maybe an openhmd plugin to use a rift as trackers the technical aspect is very feasible but it's moreso we're wondering if it's worth it at all"},{"title":"Acerca de Amethyst y K2VR","path":"es/about","plaintext":"acerca de amethyst y k2vr la historia el equipo y proyecto k2vr fue originalmente empezado por sharkyh20 para seguimiento de cuerpo completo con kinect y ps move hecho en parte como alternativa a las aplicaciones de pago por temas de la vida real sharky dejó el proyecto dejándolo desatendido durante un largo tiempo por alguna razón yo aurora cogí las riendas del proyecto y empecé a ofrecer soporte a usuarios eventualmente acabando con un instalador primitivo juntándome con akaya que en ese tiempo habia hecho un fork de el proyecto para usarlo en un proyecto de guantes rv con arduino los esfuerzos de akaya para arreglar el código de kinecttovr para su propio uso acabó en una nueva versión de la app ya que no teníamos una respuesta definitiva a si sharky reasumiría el proyecto llamamos a esta version de la aplicación kinecttovr ex abreviado como k2ex ex significaba extra o extended extendido ya que añadia funciones al trabajo original de sharky han pasado años y una página web oficial instalador personalizado gráfico múltiples actualizaciónes anuales de gran escala hemos llegado hasta hoy en día que es amethyst amethyst es una plataforma modular con soporte para extensiones de dispositivos que puedes escribir tu mismo si sabes c por defecto viene con extensiones para el kinect de xbox 360 el kinect de xbox one psmoveservice ex y owotrack prácticamente es una desviación completa de la aplicación kinecttovr original durante casi todo el tiempo que k2ex ha existido akaya llevaba trabajando en una versión ya abandonada de la aplicación usando qt como proyecto aparte con la intención de que eventualmente reemplazara a la aplicación principal mucho del trabajo de esta nueva versión no fue en vano de él fué creada la k2api que proporciona las interfaces necesitadas para que cualquier aplicación se comunique con el controlador de steamvr además de mucho de el código base para controlar kinects despues de que haya muchos problemas por parte de qt akaya lo abandonó y empezó a trabajar en una nueva revisión super secreta de ktvr usando winui 3 de microsoft para la interfaz originalmente llamada kinecttovr 1 0 fue dada el nombre en clave de amethyst se me ocurrió ese nombre en unos 30 segundos solo estaba destinado a ser un nombre en clave para referirnos a la aplicación internamente sin que nos confundieramos eventualmente me dí cuenta que considerando el salto pequeño en número de version solo de 0 9 a 1 0 los usuarios tál vez no se darían cuenta de que es una aplicación completamente nueva y así el nombre amethyst fue asignado al proyecto winui 3 entero a su vez fue dado una nueva capa de pintura en el logo puntos tambíen resulta que la gente no escribe mal tanto amethyst como lo hacían con kinecttovr donde nos encontramos ahora ahora la aplicación se llama amethyst y esta creada por el equipo k2vr team el soporte se da en el servidor de discord k2vr community la aplicación y su documentación se encuentran en la página web k2vr tech y la aplicación usada para instalar amethyst se llama amethyst installer asi que en resumen cuando hablas sobre la aplicación amethyst cuando hablas sobre el proyecto k2vr quién es esa chica esa es violet la mascota de k2vr y amethyst ya que amethyst es una aplicación de seguimiento de cuerpo tenía sentido que nosotros tengamos una mascota para ayudar a crear demonstraciónes del seguimiento en una forma que sea consistente con el resto de nuestra marca puedes verla haciendo unos trucos impresionantes en la página principal de la página web saludándote en el instalador de amethyst y en el asistente de configuración la primera vez que abres la app también esta en la ventana de calibración para mostrarte una guía visual de como moverte por tu aréa de juego también es nuestro robot de soporte en discord por qué desarrollar seguimiento con kinect no es una tecnología muerta entiendo porqué alguien pensaría eso pero la realidad es que sobre los años con diferentes ideas innovaciones etc hemos podido sacar mucho partido de este hardware envejecido le da a mucho silicio existente una nueva vida y hace a personas felices no voy a ocultar que a veces duele tener que tratar con los controladores antiguos para el kinect tienen muchos bugs y son la fuente de los problemas de muchos de nuestros usuarios pero cuando la gente entra en el servidor de discord y nos cuenta la diversión que han pasado con su kinect hace que merezca la pena tener seguimiento de cuerpo en rv es una de las experiencias mas inmersivas y podemos ofrecerlo gratis o casi gratis a cualquier persona el kinect ya es mucho mejor de lo que debería ser un sensor de 30 dólares de 2010 y todavía no hemos acabado ya que nada ha sido confirmado todavía no revelaré planes futuros pero espera por cosas muy guays de nosotros aceptaís donaciones sí aquí mismo en nuestra página opencollective puedes hacer donaciónes mensuales o de una sola vez el dinero irá a costes de alojamiento y dominio comprar hardware para que nuestros miembros de el equipo prueben cosas más rapido y compensar el trabajo voluntariado de todos que han hecho estos años los donadores serán dados un rol permanente en el servidor de discord y tendrán su nombre listado en la página de créditos de la aplicación puedes escoger no ser listado si quieres conservar el anonimato"},{"title":"Installing Amethyst","path":"es/app/installation","plaintext":"instalando amethyst"},{"title":"Getting a Kinect and adapter","path":"es/buying-kinect","plaintext":"obteniendo un kinect y su adaptador cuando uses amethyst probablemente uses un kinect soportamos otros dispositivos pero el 99 de usuarios están interesados en usar la aplicación para seguimiento con kinect si has venido hasta aquí es porque todavía no tienes un kinect y quieres saber qué comprar y donde hacerlo hay algunas recomendaciones y advertencias que deberías seguir es fácil acabar pagando demasiado o comprando hardware que no funcione deberías comprar un kinect hay algunas otras opciones como slimevr apriltag rastreadores vive o ps move los kinects son baratos pero tienen algunos límites que tal vez te hagan reconsiderar el seguimiento de lado es casi inexistente cualquier pose que haga que tu cabeza este debajo de tu cintura como hacer el pino breakdance volteretas etc no se pueden hacer la rotación de articulaciones está lejos de ser perfecta a no ser que proporciones datos externos de dispositivos compatibles lo más importante necesitas un área grande con el kinect de xbox 360 necesitas estar a por lo menos 1 5 metros para que funcione el seguimiento y preferiblemente a 2 metros para el mejor seguimiento con el kinect de xbox one es más bien 1 2 metros mínimo y 1 8 metros preferiblemente también necesitas colocar el kinect donde te pueda ver a nivel de ojo y conectarlo a tu pc el cable es de unos 3 metros 9 pies y el adaptador añade otros 30 centímetros 1 pie y si eso no fuera lo gracioso suficiente el kinect especialmente el de xbox one necesita mucho ancho de banda usb generalmente si tienes un ordenador con amd ryzen es lo más probable que te funcione los portatíles y quest 2 con oculus link son dos cosas notables que pueden causar problemas si no estás seguro únete al discord y pregúntanos allí que kinect deberías comprar en la mayoría de casos la respuesta será comprar un kinect de xbox 360 por razónes detalladas en esta página el kinect de xbox one cuesta bastante mas que el de xbox 360 y aparte de un campo de visión mayor distancia minima requerida más baja y una cámara color 1080p no hace seguimiento mejor o más rapido que el kinect de xbox 360 también sufre de muchos problemas con usb 3 ancho de banda compatibilidad con diferentes chipsets y rompe el seguimiento con cascos y mandos que usen estaciones base ej vive index pimax si tienes un área mas pequeña y solo puedes colocarte a unos 1 5 metros y estás seguro de que tienes el ancho de banda usb para correr un kinect de xbox one entonces tal vez considéralo pero si no no lo hagas dónde compro el kinect si estás en españa península y islas canarias méxico portugal italia países bajos polonia australia o irlanda vete aquí ni siquiera preguntes los kinects vendidos en cex siempre funcionan los adaptadores son comprobados y hay garantía su precio también es imbatible también significa que puedes ignorar la parte entera sobre adaptadores más abajo en esta página si no mira en ebay o páginas de compra venta locales cualquier kinect que veas en amazon probablemente cueste demasiado si buscas por erratas comunes de kinect como xbox connect konect kinnect o similares muchas veces encontrarás listados de gente que le falta educación en el dinero y en cómo escribir dónde compro el adaptador comprálo en ebay por favor tenemos con buenas pruebas que a todos los usuarios que les llegó un adaptador que no funciona lo compraron en amazon sé que a algunas personas no les gusta usar ebay por experiencias pasadas pero sólo hemos tenido buenas reacciones de gente que uso ebay en nuestro servidor de discord dependiendo de donde vivas el link a ebay cambiará pero sólo abre la página principal y busca adaptador kinect 360 o en inglés kinect 360 adapter y escoge el primer o segundo resultado cual tenga envio mas barato o si quieres recibirlo más rápido cómpralo de un vendedor que se localice en tu país cuando lleguen las cosas vete a una de las siguientes páginas según que kinect tengas configurando tu kinect de xbox 360 configurando tu kinect de xbox one"},{"title":"How Amethyst compares to other options","path":"es/comparison","plaintext":"cómo amethyst se compara con otras opciones hurr durr cool comparison shit idk dont have stuff for it yet"},{"title":"Amethyst Docs","path":"es","plaintext":"amethyst this documentation is still a work in progress it will hopefully be done by the time amethyst releases you're welcome to help by contributing pages or translating over on github this is the homepage for the amethyst documentation it's built from the markdown source at https github com kinecttovr k2vr docs feel free to contribute learn more about the history and development of the app and everyone in the team a comprehensive comparison of using various devices in amethyst compared to other full body tracking solutions where and which kinect and usb and power adapter should you purchase"}]}